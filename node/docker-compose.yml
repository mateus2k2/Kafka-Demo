version: '2'
name: 'TP5SD'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    stdin_open: true 
    tty: true

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka_network
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    stdin_open: true 
    tty: true

  consumer:
    build:
      context: consumer
      dockerfile: Dockerfile
    # image: mateus2k2/kafka_sd-consumer
    env_file:
      - .env
    environment:
      - MESSAGE_SIZE=${MESSAGE_SIZE}
      - MESSAGES_PER_SECOND=${MESSAGES_PER_SECOND}
    depends_on:
      - kafka
    networks:
      - kafka_network
    stdin_open: true 
    tty: true        

  producer:
    build:
      context: producer
      dockerfile: Dockerfile
    # image: mateus2k2/kafka_sd-producer
    env_file:
      - .env
    environment:
      - MESSAGE_SIZE=${MESSAGE_SIZE}
      - MESSAGES_PER_SECOND=${MESSAGES_PER_SECOND}
    depends_on:
      - kafka
    networks:
      - kafka_network
    stdin_open: true 
    tty: true

networks:
  kafka_network:
    driver: bridge

# Esquema para ficar tentando conectar com o kafka tanto no consumer quanto no producer
# testar conteiner do consumer e producer
# fazer GUI do kafka