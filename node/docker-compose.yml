version: '2'
name: 'TP5SD'
services:
#----------------------------------------------------------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: on-failure
    stdin_open: true 
    tty: true

#----------------------------------------------------------------------------

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka_network
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: on-failure
    healthcheck:
      # test: ["CMD-SHELL", "/bin/kafka-topics --bootstrap-server kafka:9092 --topic ${TOPIC_NAME} --describe"]
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 3s
      timeout: 3s
      retries: 150
    stdin_open: true 
    tty: true

#----------------------------------------------------------------------------

  kafdrop:
    image: obsidiandynamics/kafdrop
    networks:
      - kafka_network
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

#----------------------------------------------------------------------------

  init-kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - kafka_network
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      /bin/kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      /bin/kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic teste --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      /bin/kafka-topics --bootstrap-server kafka:9092 --list
      "

#----------------------------------------------------------------------------

  consumer:
    build:
      context: src/consumer
      dockerfile: Dockerfile
    # image: mateus2k2/kafka_sd-consumer
    env_file:
      - .env
    environment:
      - MESSAGE_SIZE=${MESSAGE_SIZE}
      - MESSAGES_PER_SECOND=${MESSAGES_PER_SECOND}
    depends_on:
      kafka:
        condition: service_healthy
    # depends_on:
    #   - kafka
    networks:
      - kafka_network
    restart: on-failure
    stdin_open: true 
    tty: true        

#----------------------------------------------------------------------------

  producer:
    build:
      context: src/producer
      dockerfile: Dockerfile
    # image: mateus2k2/kafka_sd-producer
    env_file:
      - .env
    environment:
      - MESSAGE_SIZE=${MESSAGE_SIZE}
      - MESSAGES_PER_SECOND=${MESSAGES_PER_SECOND}
    depends_on:
      kafka:
        condition: service_healthy
    # depends_on:
    #   - kafka
    networks:
      - kafka_network
    restart: on-failure
    stdin_open: true 
    tty: true

networks:
  kafka_network:
    driver: bridge

#----------------------------------------------------------------------------




# /bin/kafka-topics --bootstrap-server kafka:9092 --topic test --describe